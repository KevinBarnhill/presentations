@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>ASP.NET SignalR Demo</h1>
    <p class="lead">Don't hate the demo.. hate the guy sleeping through it.</p>
    
</div>

<div class="row">
    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading">Actions</div>
            <div class="panel-body">
                <div class="input-group">
                    <span class="input-group-addon">@@</span>
                    <input id="username" data-bind="value: myName" type="text" class="form-control" placeholder="Username">
                </div>
                <button class="btn btn-default" data-bind="click: sendToMe">Send to Me</button><br />
                <button class="btn btn-default" data-bind="click: sendToEveryone">Send to Everyone</button><br />
                <button class="btn btn-default" data-bind="click: joinExcitingGroup">Join Exciting Group</button><br />
                <button class="btn btn-default" data-bind="click: sendToExcitingGroup">Send To Exciting Group</button><br />

            </div>
        </div>
        
    </div>
    <div class="col-md-8">
        <div class="panel panel-default">
            <div class="panel-heading">Results</div>
            <div class="panel-body">
                <ul id="results" data-bind="foreach: resultArray">
                    <li><span data-bind="text: data"></span></li>
                </ul>
            </div>
        </div>
    </div>
    
</div>

@section scripts {
<!-- autogenerated signalr hub proxy script -->
<script type="text/javascript" src="~/signalr/hubs"></script>
<!-- view model -->
<script type="text/javascript">
    var web2ViewModel = function () {

        // Reference the auto-generated proxy for the hub.
        var notification = $.connection.notificationHub;
        $.connection.hub.logging = true;
        $.connection.notificationHub.logging = true;
        
        // create a function to handle "sendNotification" event from hub
        notification.client.sendNotification = function (message) {
            addResult(message);
        };

        var resultArray = ko.observableArray([]);
        var myName = ko.observable('my name');

        var createInputObject = function () {
            var item = {};
            item.From = myName();

            return item;
        };

        var sendToMe = function () {
            var input = createInputObject();
            notification.server.sendToMe(input);
        };

        var sendToEveryone = function () {
            var input = createInputObject();
            notification.server.sendToEveryone(input);
        };

        var sendToExcitingGroup = function () {
            var input = createInputObject();
            notification.server.sendToExcitingGroup(input);
        };

        var joinExcitingGroup = function () {
            var input = createInputObject();
            notification.server.joinExcitingGroup(input);
        };

        var addResult = function (message) {
            var str = 'From: ' + message.From + ' Data: ' + message.Data;
            var item = {};
            item.data = str;
            resultArray.push(item);
        };

        // init

        // Start the connection.
        $.connection.hub.start().done(function () {
            var message = { From: "javascript proxy", Data: "Connected" };
            addResult(message);
        });

        return {
            addResult: addResult,
            sendToMe: sendToMe,
            sendToEveryone: sendToEveryone,
            sendToExcitingGroup: sendToExcitingGroup,
            joinExcitingGroup: joinExcitingGroup,

            myName: myName,
            resultArray: resultArray
        };
    };
    // create view model
    var vm = new web2ViewModel();
    // apply ko bindings
    ko.applyBindings(vm);

    $(document).ready(function () {
        $("#username").focus().select();
    });
    
</script>
}